<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd 
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <!-- 登录页面不拦截 -->
    <security:http pattern="/login" security="none" />
    <!-- 资源文件不拦截 -->
    <security:http pattern="/resources/**" security="none" />
    

    <security:http auto-config="true" use-expressions="true" access-denied-page="/denied">

        <!-- default-target-url 指定了从登录页面登录后进行跳转的页面 always-use-default-target true表示登录成功后强制跳转 
        authentication-failure-url 表示验证失败后进入的页面 login-processing-url 设置验证登录验证地址，如果不设置，默认是j_spring_security_check 
        username-parameter,password-parameter 设置登录用户名和密码的请求name，默认：j_username,j_password 
        default-target-url="/user/home" -->
        <security:form-login login-page="/login"
                    always-use-default-target="true"
                    authentication-success-handler-ref="successHandler"
                    authentication-failure-handler-ref="failureHandler" />
        
        <!-- 管理员和普通用户可以访问 -->
        <security:intercept-url pattern="/index" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" />
        <!-- 管理员和普通用户可以访问 -->
        <security:intercept-url pattern="/common" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" />
        <!-- 只有管理员可以访问 -->
        <security:intercept-url pattern="/admin" access="hasAnyRole('ROLE_ADMIN')" />
        <!-- 退出后到登陆页面 -->
        <security:logout logout-success-url="/login" />

        <!-- error-if-maximum-exceeded 后登陆的账号会挤掉第一次登陆的账号 
    session-fixation-protection 
    防止伪造sessionid攻击. 用户登录成功后会销毁用户当前的session.   
        创建新的session,并把用户信息复制到新session中. -->

        <security:session-management invalid-session-url="/login?error=3"
                            session-fixation-protection="none">
            <security:concurrency-control max-sessions="1"
                                 error-if-maximum-exceeded="true" expired-url="/login?error=2" /><!-- 阻止第二次登录 -->
        </security:session-management>
    </security:http>


    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="securityLoginService"/>
    </security:authentication-manager>

    <bean id="securityLoginService" class="net.idealclover.java.fw.svc.com.security.impl.UserDetailsServiceImpl" />
    
    <!-- 登录成功业务处理 -->
    <bean id="successHandler"
                class="net.idealclover.java.fw.web.com.security.handler.SecurityAuthenticationSuccessHandler">
        <property name="url" value="/index"></property>  
    </bean>
    
    <!-- 登录失败业务处理 -->
    <bean id="failureHandler" class="net.idealclover.java.fw.web.com.security.handler.SecurityAuthenticationFailureHandler"/>
    



</beans>  